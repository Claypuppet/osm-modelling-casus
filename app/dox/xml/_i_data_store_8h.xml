<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_i_data_store_8h" kind="file" language="C++">
    <compoundname>IDataStore.h</compoundname>
    <includes refid="_datastore_model_8h" local="yes">DatastoreModel.h</includes>
    <includes local="no">functional</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">memory</includes>
    <includes local="no">utility</includes>
    <includes local="no">boost/type_index/ctti_type_index.hpp</includes>
    <includedby refid="_static_datastore_8h" local="yes">StaticDatastore.h</includedby>
    <includedby refid="_base_repo_8h" local="yes">BaseRepo.h</includedby>
    <includedby refid="_verhuur_repo_8h" local="yes">VerhuurRepo.h</includedby>
    <includedby refid="_tarief_repo_8h" local="yes">TariefRepo.h</includedby>
    <includedby refid="_i_data_store_8cpp" local="yes">IDataStore.cpp</includedby>
    <incdepgraph>
      <node id="393">
        <label>functional</label>
      </node>
      <node id="396">
        <label>boost/type_index/ctti_type_index.hpp</label>
      </node>
      <node id="390">
        <label>IDataStore.h</label>
        <link refid="_i_data_store_8h"/>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
      </node>
      <node id="395">
        <label>utility</label>
      </node>
      <node id="394">
        <label>type_traits</label>
      </node>
      <node id="391">
        <label>DatastoreModel.h</label>
        <link refid="_datastore_model_8h"/>
        <childnode refid="392" relation="include">
        </childnode>
      </node>
      <node id="392">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="405">
        <label>Reservering.cpp</label>
        <link refid="_reservering_8cpp"/>
      </node>
      <node id="403">
        <label>Product.cpp</label>
        <link refid="_product_8cpp"/>
      </node>
      <node id="412">
        <label>BaseRepo.h</label>
        <link refid="_base_repo_8h"/>
        <childnode refid="413" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
      </node>
      <node id="413">
        <label>KlantRepo.h</label>
        <link refid="_klant_repo_8h"/>
        <childnode refid="399" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
      </node>
      <node id="409">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="417">
        <label>TariefRepo.h</label>
        <link refid="_tarief_repo_8h"/>
        <childnode refid="399" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
      </node>
      <node id="414">
        <label>KlantRepo.cpp</label>
        <link refid="_klant_repo_8cpp"/>
      </node>
      <node id="415">
        <label>VerhuurRepo.h</label>
        <link refid="_verhuur_repo_8h"/>
        <childnode refid="399" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
      </node>
      <node id="406">
        <label>ReserveringController.cpp</label>
        <link refid="_reservering_controller_8cpp"/>
      </node>
      <node id="399">
        <label>Application.h</label>
        <link refid="_application_8h"/>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
        <childnode refid="409" relation="include">
        </childnode>
        <childnode refid="410" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
      </node>
      <node id="404">
        <label>RedCarsContext.cpp</label>
        <link refid="_red_cars_context_8cpp"/>
      </node>
      <node id="400">
        <label>Application.cpp</label>
        <link refid="_application_8cpp"/>
      </node>
      <node id="401">
        <label>ReserveringRepo.h</label>
        <link refid="_reservering_repo_8h"/>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="407" relation="include">
        </childnode>
      </node>
      <node id="410">
        <label>StaticDatastore.cpp</label>
        <link refid="_static_datastore_8cpp"/>
      </node>
      <node id="416">
        <label>VerhuurRepo.cpp</label>
        <link refid="_verhuur_repo_8cpp"/>
      </node>
      <node id="411">
        <label>Verhuur.cpp</label>
        <link refid="_verhuur_8cpp"/>
      </node>
      <node id="398">
        <label>StaticDatastore.h</label>
        <link refid="_static_datastore_8h"/>
        <childnode refid="399" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="410" relation="include">
        </childnode>
      </node>
      <node id="397">
        <label>IDataStore.h</label>
        <link refid="_i_data_store_8h"/>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="412" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
      </node>
      <node id="407">
        <label>ReserveringRepo.cpp</label>
        <link refid="_reservering_repo_8cpp"/>
      </node>
      <node id="418">
        <label>TariefRepo.cpp</label>
        <link refid="_tarief_repo_8cpp"/>
      </node>
      <node id="419">
        <label>IDataStore.cpp</label>
        <link refid="_i_data_store_8cpp"/>
      </node>
      <node id="408">
        <label>Boete.cpp</label>
        <link refid="_boete_8cpp"/>
      </node>
      <node id="402">
        <label>RedCarsContext.h</label>
        <link refid="_red_cars_context_8h"/>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="403" relation="include">
        </childnode>
        <childnode refid="404" relation="include">
        </childnode>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_core_1_1_model_by_id" prot="public">Core::ModelById</innerclass>
    <innerclass refid="class_core_1_1_i_data_store" prot="public">Core::IDataStore</innerclass>
    <innerclass refid="struct_core_1_1_i_data_store_1_1_has_id" prot="public">Core::IDataStore::HasId</innerclass>
    <innerclass refid="struct_core_1_1_i_data_store_1_1_has_id_3_01_t_00_01decltype_07_07void_08_01_t_1_1x_00_010_08_4" prot="public">Core::IDataStore::HasId&lt; T, decltype((void) T::x, 0)&gt;</innerclass>
    <innernamespace refid="namespace_core">Core</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>IDataStore.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>24<sp/>Oct<sp/>2017</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Vuurvlieg</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IDATASTORE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IDATASTORE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_datastore_model_8h" kindref="compound">DatastoreModel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/type_index/ctti_type_index.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_core" kindref="compound">Core</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>boost::typeindex::ctti_type_index;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModelType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModelIdFieldType=u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t&gt;</highlight></codeline>
<codeline lineno="26" refid="struct_core_1_1_model_by_id" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_core_1_1_model_by_id" kindref="compound">ModelById</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28" refid="struct_core_1_1_model_by_id_1a4f0e1c929b463510b47db4e5a56ad86c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_core_1_1_model_by_id_1a4f0e1c929b463510b47db4e5a56ad86c" kindref="member">ModelById</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ModelIdFieldType&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>:<sp/>id(id)<sp/>{}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="struct_core_1_1_model_by_id_1a4b3450a059365205e50df9d5ec2ea702" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_core_1_1_model_by_id_1a4b3450a059365205e50df9d5ec2ea702" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ModelType&gt;&amp;<sp/>model)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model-&gt;id<sp/>==<sp/><ref refid="struct_core_1_1_model_by_id_1ab9301786d6361fca83b0475d8b015cf9" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36" refid="struct_core_1_1_model_by_id_1ab9301786d6361fca83b0475d8b015cf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ModelIdFieldType&amp;<sp/><ref refid="struct_core_1_1_model_by_id_1ab9301786d6361fca83b0475d8b015cf9" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derrived&gt;</highlight></codeline>
<codeline lineno="40" refid="class_core_1_1_i_data_store" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_core_1_1_i_data_store" kindref="compound">IDataStore</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_core_1_1_i_data_store" kindref="compound">IDataStore</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_core_1_1_i_data_store" kindref="compound">IDataStore</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModelType&gt;</highlight></codeline>
<codeline lineno="47" refid="class_core_1_1_i_data_store_1acf41fbcfc53e02d2bbef9adc82d3f5ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_core_1_1_i_data_store_1acf41fbcfc53e02d2bbef9adc82d3f5ff" kindref="member">IsValidModelType</ref><sp/>=<sp/>std::is_same&lt;bool,bool&gt;;<sp/></highlight><highlight class="comment">//std::is_base_of&lt;DatastoreModel&lt;ModelType&gt;*,<sp/>ModelType*&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModelType&gt;</highlight></codeline>
<codeline lineno="50" refid="class_core_1_1_i_data_store_1a1f1a7edf2447cf606cff275b8a060065" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_core_1_1_i_data_store_1a1f1a7edf2447cf606cff275b8a060065" kindref="member">ValidModelType</ref><sp/>=<sp/>std::enable_if&lt;IsValidModelType&lt;ModelType&gt;::value,ModelType&gt;;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t&gt;</highlight></codeline>
<codeline lineno="53" refid="struct_core_1_1_i_data_store_1_1_has_id" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_core_1_1_i_data_store_1_1_has_id" kindref="compound">HasId</ref><sp/>:<sp/>std::false_type<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="56" refid="struct_core_1_1_i_data_store_1_1_has_id_3_01_t_00_01decltype_07_07void_08_01_t_1_1x_00_010_08_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_core_1_1_i_data_store_1_1_has_id" kindref="compound">HasId</ref><sp/>&lt;T,<sp/>decltype((void)<sp/>T::x,<sp/>0)&gt;<sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModelType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SelectPredicate=ModelById&lt;ModelType&gt;&gt;</highlight></codeline>
<codeline lineno="60" refid="class_core_1_1_i_data_store_1a0f58fffd47db45493d1eccf35f1e91ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ModelType&gt;<sp/><ref refid="class_core_1_1_i_data_store_1a0f58fffd47db45493d1eccf35f1e91ab" kindref="member">loadModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ModelType&gt;&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SelectPredicate&amp;<sp/>predicate)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Derrived&amp;<sp/>d<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Derrived&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DT<sp/>=<sp/>decltype(&amp;Derrived::template<sp/>loadModel&lt;ModelType,SelectPredicate&gt;);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>BT<sp/>=<sp/>decltype(&amp;<ref refid="class_core_1_1_i_data_store" kindref="compound">IDataStore&lt;Derrived&gt;::template</ref><sp/>loadModel&lt;ModelType,SelectPredicate&gt;);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(ctti_type_index::type_id&lt;DT&gt;()<sp/>!=<sp/>ctti_type_index::type_id&lt;BT&gt;(),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Derrived<sp/>did<sp/>not<sp/>implement<sp/>loadModel<sp/>method&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d.loadModel(out,<sp/>predicate);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModelType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SelectPredicate=ModelById&lt;ModelType&gt;&gt;</highlight></codeline>
<codeline lineno="75" refid="class_core_1_1_i_data_store_1a0515b13f9c31faf054d3d0265f63dc50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ModelType&gt;<sp/><ref refid="class_core_1_1_i_data_store_1a0515b13f9c31faf054d3d0265f63dc50" kindref="member">saveModel</ref>(std::shared_ptr&lt;ModelType&gt;<sp/>in,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SelectPredicate&amp;<sp/>predicate)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Derrived&amp;<sp/>d<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Derrived&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DT<sp/>=<sp/>decltype(&amp;Derrived::template<sp/>saveModel&lt;ModelType,SelectPredicate&gt;);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>BT<sp/>=<sp/>decltype(&amp;<ref refid="class_core_1_1_i_data_store" kindref="compound">IDataStore&lt;Derrived&gt;::template</ref><sp/>saveModel&lt;ModelType,SelectPredicate&gt;);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(ctti_type_index::type_id&lt;DT&gt;()<sp/>!=<sp/>ctti_type_index::type_id&lt;BT&gt;(),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Derrived<sp/>did<sp/>not<sp/>implement<sp/>saveModel<sp/>method&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d.saveModel(in,<sp/>predicate);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModelType&gt;</highlight></codeline>
<codeline lineno="88" refid="class_core_1_1_i_data_store_1a50230ba876480b9097c2710b08601182" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ModelType&gt;<sp/><ref refid="class_core_1_1_i_data_store_1a50230ba876480b9097c2710b08601182" kindref="member">createModel</ref>(std::shared_ptr&lt;ModelType&gt;<sp/>model)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(!HasId&lt;ModelType&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;Model<sp/>needs<sp/>to<sp/>have<sp/>an<sp/>id<sp/>member<sp/>as<sp/>primary<sp/>key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!model)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;nullptr<sp/>value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(model-&gt;id<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;model<sp/>already<sp/>has<sp/>an<sp/>id<sp/>assigned,<sp/>did<sp/>you<sp/>mean<sp/>to<sp/>save<sp/>it?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Derrived&amp;<sp/>d<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Derrived&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>DT<sp/>=<sp/>decltype(&amp;Derrived::template<sp/>createModel&lt;ModelType&gt;);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>BT<sp/>=<sp/>decltype(&amp;<ref refid="class_core_1_1_i_data_store" kindref="compound">IDataStore&lt;Derrived&gt;::template</ref><sp/>createModel&lt;ModelType&gt;);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(ctti_type_index::type_id&lt;DT&gt;()<sp/>!=<sp/>ctti_type_index::type_id&lt;BT&gt;(),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Derrived<sp/>did<sp/>not<sp/>implement<sp/>createModel<sp/>method&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d.createModel(model);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>IDATASTORE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="IDataStore.h"/>
  </compounddef>
</doxygen>
